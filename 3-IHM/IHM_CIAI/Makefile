#############################################################################
# Makefile for building: IHM_CIAI
# Generated by qmake (2.01a) (Qt 4.7.4) on: sam. nov. 19 17:36:52 2011
# Project:  IHM_CIAI.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile IHM_CIAI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		fenprincipale.cpp \
		fencommande.cpp \
		fenconfig.cpp \
		communication.cpp \
		widgetcommande.cpp moc_fenprincipale.cpp \
		moc_fencommande.cpp \
		moc_fenconfig.cpp \
		moc_communication.cpp \
		moc_widgetcommande.cpp \
		qrc_ressources.cpp
OBJECTS       = main.o \
		fenprincipale.o \
		fencommande.o \
		fenconfig.o \
		communication.o \
		widgetcommande.o \
		moc_fenprincipale.o \
		moc_fencommande.o \
		moc_fenconfig.o \
		moc_communication.o \
		moc_widgetcommande.o \
		qrc_ressources.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		IHM_CIAI.pro
QMAKE_TARGET  = IHM_CIAI
DESTDIR       = 
TARGET        = IHM_CIAI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_fenprincipale.h ui_fencommande.h ui_fenconfig.h ui_widgetcommande.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: IHM_CIAI.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile IHM_CIAI.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile IHM_CIAI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/IHM_CIAI1.0.0 || $(MKDIR) .tmp/IHM_CIAI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/IHM_CIAI1.0.0/ && $(COPY_FILE) --parents fenprincipale.h fencommande.h fenconfig.h communication.h ciaiProtocol.h widgetcommande.h .tmp/IHM_CIAI1.0.0/ && $(COPY_FILE) --parents ressources.qrc .tmp/IHM_CIAI1.0.0/ && $(COPY_FILE) --parents main.cpp fenprincipale.cpp fencommande.cpp fenconfig.cpp communication.cpp widgetcommande.cpp .tmp/IHM_CIAI1.0.0/ && $(COPY_FILE) --parents fenprincipale.ui fencommande.ui fenconfig.ui widgetcommande.ui .tmp/IHM_CIAI1.0.0/ && (cd `dirname .tmp/IHM_CIAI1.0.0` && $(TAR) IHM_CIAI1.0.0.tar IHM_CIAI1.0.0 && $(COMPRESS) IHM_CIAI1.0.0.tar) && $(MOVE) `dirname .tmp/IHM_CIAI1.0.0`/IHM_CIAI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/IHM_CIAI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_fenprincipale.cpp moc_fencommande.cpp moc_fenconfig.cpp moc_communication.cpp moc_widgetcommande.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_fenprincipale.cpp moc_fencommande.cpp moc_fenconfig.cpp moc_communication.cpp moc_widgetcommande.cpp
moc_fenprincipale.cpp: fenprincipale.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fenprincipale.h -o moc_fenprincipale.cpp

moc_fencommande.cpp: fenprincipale.h \
		fencommande.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fencommande.h -o moc_fencommande.cpp

moc_fenconfig.cpp: fenprincipale.h \
		fenconfig.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fenconfig.h -o moc_fenconfig.cpp

moc_communication.cpp: ciaiProtocol.h \
		communication.h
	/usr/bin/moc $(DEFINES) $(INCPATH) communication.h -o moc_communication.cpp

moc_widgetcommande.cpp: ciaiProtocol.h \
		widgetcommande.h
	/usr/bin/moc $(DEFINES) $(INCPATH) widgetcommande.h -o moc_widgetcommande.cpp

compiler_rcc_make_all: qrc_ressources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_ressources.cpp
qrc_ressources.cpp: ressources.qrc \
		ressources/ihm.png \
		ressources/ok.png \
		ressources/error.png
	/usr/bin/rcc -name ressources ressources.qrc -o qrc_ressources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_fenprincipale.h ui_fencommande.h ui_fenconfig.h ui_widgetcommande.h
compiler_uic_clean:
	-$(DEL_FILE) ui_fenprincipale.h ui_fencommande.h ui_fenconfig.h ui_widgetcommande.h
ui_fenprincipale.h: fenprincipale.ui
	/usr/bin/uic fenprincipale.ui -o ui_fenprincipale.h

ui_fencommande.h: fencommande.ui
	/usr/bin/uic fencommande.ui -o ui_fencommande.h

ui_fenconfig.h: fenconfig.ui
	/usr/bin/uic fenconfig.ui -o ui_fenconfig.h

ui_widgetcommande.h: widgetcommande.ui
	/usr/bin/uic widgetcommande.ui -o ui_widgetcommande.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp fenprincipale.h \
		fencommande.h \
		fenconfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

fenprincipale.o: fenprincipale.cpp fenprincipale.h \
		fencommande.h \
		fenconfig.h \
		widgetcommande.h \
		ciaiProtocol.h \
		ui_fenprincipale.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fenprincipale.o fenprincipale.cpp

fencommande.o: fencommande.cpp fencommande.h \
		fenprincipale.h \
		ui_fencommande.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fencommande.o fencommande.cpp

fenconfig.o: fenconfig.cpp fenconfig.h \
		fenprincipale.h \
		ui_fenconfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fenconfig.o fenconfig.cpp

communication.o: communication.cpp communication.h \
		ciaiProtocol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o communication.o communication.cpp

widgetcommande.o: widgetcommande.cpp widgetcommande.h \
		ciaiProtocol.h \
		ui_widgetcommande.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o widgetcommande.o widgetcommande.cpp

moc_fenprincipale.o: moc_fenprincipale.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fenprincipale.o moc_fenprincipale.cpp

moc_fencommande.o: moc_fencommande.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fencommande.o moc_fencommande.cpp

moc_fenconfig.o: moc_fenconfig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fenconfig.o moc_fenconfig.cpp

moc_communication.o: moc_communication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_communication.o moc_communication.cpp

moc_widgetcommande.o: moc_widgetcommande.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_widgetcommande.o moc_widgetcommande.cpp

qrc_ressources.o: qrc_ressources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_ressources.o qrc_ressources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

